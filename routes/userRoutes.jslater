// routes/userRoutes.js

import express from 'express';
const router = express.Router();
import User from '../models/User.js';


// Get user data by Telegram ID
router.get('/users', async (req, res) => {
  try {
    const users = await User.find();  // Fetch all users from MongoDB
    res.status(200).json(users);      // Return users as JSON
  } catch (err) {
    res.status(500).json({ error: 'Failed to fetch users' });
  }
});

router.get('/user/:telegramId', async (req, res) => {
  const { telegramId } = req.params;

  try {
    const user = await User.findOne({ telegramId });
    if (!user) {
      return res.status(404).json({ error: 'User not found' });
    }
    res.status(200).json({ gems: user.gems });
  } catch (err) {
    res.status(500).json({ error: 'Error fetching user data' });
  }
});

// Update user gems by Telegram ID
router.post('/user/:telegramId', async (req, res) => {
  const { telegramId } = req.params;
  const { gems } = req.body;

  try {
    const user = await User.findOneAndUpdate(
      { telegramId }, // Find user by Telegram ID
      { gems }, // Update gems field
      { new: true, upsert: true } // Create user if doesn't exist
    );

    res.status(200).json({ success: true, user });
  } catch (err) {
    res.status(500).json({ error: 'Error updating gems' });
  }
});


export default router;
